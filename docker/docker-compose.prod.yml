version: '3.2'
services:
  nginx:
    image: nginx
    volumes:
      - ./config/prod/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../certificates:/certificates
    ports:
      - 80:80
      - 443:443
    restart: on-failure
  web:
    build: ../src
    env_file:
      - prod.env
    depends_on:
      - mysql
      - migrate
    environment:
      - MODE=WEB_PRODUCTION
    volumes:
      - ../certificates:/certificates
    deploy:
      resources:
        limits:
          memory: 1gb

  migrate:
    build: ../src
    env_file:
      - prod.env
    depends_on:
      - mysql
    environment:
      - MODE=MIGRATE
    deploy:
      resources:
        limits:
          memory: 300m


  mysql:
    image: mysql:5.7.31
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    env_file:
      - prod.env
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']
    deploy:
      resources:
        limits:
          memory: 2gb

  celery:
    build: ../src
    env_file:
      - prod.env
    depends_on:
      - migrate
      - mysql
      - rabbitmq
    environment:
      - MODE=CELERY
    deploy:
      resources:
        limits:
          memory: 1gb

  rabbitmq:
    image: rabbitmq:3.8.6-management
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia/
    ports:
      - 15672:15672
    env_file:
      - prod.env
    deploy:
      resources:
        limits:
          memory: 300m

  elasticsearch:
    build: elasticsearch
    volumes:
      - type: bind
        source: ./config/prod/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx1024m -Xms1024m"
      discovery.type: single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.1
    volumes:
      - type: bind
        source: ./config/prod/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.1
    volumes:
      - type: bind
        source: ./config/prod/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./config/prod/logstash-pipeline.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch


volumes:
  db-data:
  rabbitmq-data:
  elasticsearch:

version: '3.2'
services:
  web:
    build: ../src
    ports:
    - 80:80
    env_file:
      - dev.env
    depends_on:
      - mysql
      - migrate
    environment:
      - MODE=WEB
    volumes:
      - ../src/:/app/

  migrate:
    build: ../src
    env_file:
      - dev.env
    depends_on:
      - mysql
    environment:
      - MODE=${MODE:-MIGRATE}
      - MIGRATION_MESSAGE
    volumes:
      - ../src/:/app/

  mysql:
    image: mysql:5.7.31
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=tricky-root-password
      - MYSQL_DATABASE=news_scraper
      - MYSQL_USER=master
      - MYSQL_PASSWORD=somepass
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']

  celery:
    build: ../src
    env_file:
      - dev.env
    depends_on:
      - migrate
      - mysql
      - rabbitmq
    environment:
      - MODE=CELERY
    volumes:
      - ../src:/app/

  rabbitmq:
    image: rabbitmq:3.8.6-management
    ports:
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit_user
      - RABBITMQ_DEFAULT_PASS=rabbit_password

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    volumes:
      - type: bind
        source: ./config/dev/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node


#  You don't need this on local machine, except for debug purposes
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.9.1
#    volumes:
#      - type: bind
#        source: ./config/dev/kibana.yml
#        target: /usr/share/kibana/config/kibana.yml
#        read_only: true
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.9.1
#    volumes:
#      - type: bind
#        source: ./config/dev/logstash.yml
#        target: /usr/share/logstash/config/logstash.yml
#        read_only: true
#      - type: bind
#        source: ./config/dev/logstash-pipeline.conf
#        target: /usr/share/logstash/pipeline/logstash.conf
#        read_only: true
#    ports:
#      - "5000:5000/tcp"
#      - "5000:5000/udp"
#      - "9600:9600"
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    depends_on:
#      - elasticsearch

volumes:
  db-data:
  elasticsearch:
